<scalastyle>
 <name>Scalastyle configuration for Scala.js</name>

 <check level="error" enabled="true" class="org.scalastyle.file.FileTabChecker"/>
 <check level="error" enabled="true" class="org.scalastyle.file.WhitespaceEndOfLineChecker"/>
 <check level="error" enabled="true" class="org.scalastyle.file.NewLineAtEofChecker"/>

 <!--Indentation checker, whilst useful gives false positives on the file headers, so disabled for now-->
 <check level="error" enabled="false" class="org.scalastyle.file.IndentationChecker"/>

 <!--
 Enforce the hard limit on line length, which is 120 characters.
 Most of the time the soft limit of 80 characters should be observed, but
 we can hardly tell an automated style checker about a soft limit.
 -->
 <check level="error" enabled="true" class="org.scalastyle.file.FileLineLengthChecker">
  <parameters>
   <parameter name="maxLineLength"><![CDATA[120]]></parameter>
  </parameters>
 </check>

 <check level="error" enabled="true" class="org.scalastyle.scalariform.RedundantIfChecker"/>
 <check level="error" enabled="true" class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker"/>

 <check level="error" enabled="true" class="org.scalastyle.scalariform.UppercaseLChecker"/>

 <check level="error" enabled="true" class="org.scalastyle.scalariform.ProcedureDeclarationChecker"/>

 <check level="error" enabled="true" class="org.scalastyle.scalariform.ClassNamesChecker">
  <parameters>
   <parameter name="regex"><![CDATA[^[A-Z][A-Za-z0-9]*$]]></parameter>
  </parameters>
 </check>
 <check level="error" enabled="true" class="org.scalastyle.scalariform.ObjectNamesChecker">
  <parameters>
   <parameter name="regex"><![CDATA[^[A-Z][A-Za-z0-9]*$]]></parameter>
  </parameters>
 </check>
 <check level="error" enabled="true" class="org.scalastyle.scalariform.PackageObjectNamesChecker">
  <parameters>
   <parameter name="regex"><![CDATA[^[a-z][A-Za-z]*$]]></parameter>
  </parameters>
 </check>

 <check level="error" enabled="true" class="org.scalastyle.scalariform.EqualsHashCodeChecker"/>
 <check level="error" enabled="true" class="org.scalastyle.scalariform.CovariantEqualsChecker"/>

 <check level="error" enabled="true" class="org.scalastyle.scalariform.IllegalImportsChecker">
  <parameters>
   <parameter name="illegalImports"><![CDATA[sun._,java.awt._]]></parameter>
  </parameters>
 </check>

 <check level="error" enabled="true" class="org.scalastyle.scalariform.ReturnChecker"/>

 <check level="error" enabled="true" class="org.scalastyle.scalariform.EmptyClassChecker"/>

 <!-- Currently too strict, see https://github.com/scalastyle/scalastyle/issues/142 -->
 <check level="error" enabled="false" class="org.scalastyle.scalariform.ForBraceChecker"/>

 <check level="error" enabled="true" class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker"/>

 <check level="error" enabled="true" class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker"/>
 <check level="error" enabled="true" class="org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker"/>

 <check level="error" enabled="true" class="org.scalastyle.scalariform.DisallowSpaceBeforeTokenChecker">
  <parameters>
   <parameter name="tokens">COLON, COMMA, RPAREN</parameter>
  </parameters>
 </check>
 <check level="error" enabled="true" class="org.scalastyle.scalariform.DisallowSpaceAfterTokenChecker">
  <parameters>
   <parameter name="tokens">LPAREN</parameter>
  </parameters>
 </check>
 <check level="error" enabled="true" class="org.scalastyle.scalariform.EnsureSingleSpaceAfterTokenChecker">
  <parameters>
   <parameter name="tokens">IF, FOR, WHILE, DO, TRY</parameter>
  </parameters>
 </check>
</scalastyle>